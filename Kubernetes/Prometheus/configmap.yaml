apiVersion: v1
kind: ConfigMap
metadata:
  name: prometheus
data:
  foo: value1
  bar: value2
  prometheus.yml: |-
    global:
      scrape_interval: 15s
    scrape_configs:
      - job_name: 'prometheus'

      # Override the global default and scrape targets from this job every 5 seconds.
        scrape_interval: 5s

        target_groups:
          - targets: ['localhost:9090']

      - job_name: 'etcd'
        scheme: https
        tls_config:
          ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
          # https://github.com/prometheus/prometheus/issues/1654
          insecure_skip_verify: true
        target_groups:
        - targets:
          - 172.20.0.9:10250

      - job_name: 'kubernetes_components'
        kubernetes_sd_configs:
        - api_servers:
          - 'https://kubernetes'
          in_cluster: true
          # This configures Prometheus to identify itself when scraping
          # metrics from Kubernetes cluster components.
        # https://github.com/prometheus/prometheus/issues/1752
        scheme: https
        tls_config:
          ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
          # https://github.com/prometheus/prometheus/issues/1654
          insecure_skip_verify: true
        bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
        # Prometheus provides meta labels for each monitoring target. We use
        # these to select targets we want to monitor and to modify labels attached
        # to scraped metrics.
        relabel_configs:
        # Only scrape apiserver and kubelets.
        - source_labels: [__meta_kubernetes_role]
          action: keep
          regex: (?:apiserver|node)
        # Redefine the Prometheus job based on the monitored Kubernetes component.
        - source_labels: [__meta_kubernetes_role]
          target_label: job
          replacement: kubernetes_$1
        # Attach all node labels to the metrics scraped from the components running
        # on that node.
        - action: labelmap
          regex: __meta_kubernetes_node_label_(.+)

      - job_name: 'kubernetes_services'
        kubernetes_sd_configs:
        - api_servers:
          - 'https://kubernetes'
          in_cluster: true
        relabel_configs:
        # We only monitor endpoints of services that were annotated with
        # prometheus.io/scrape=true in Kubernetes
        - source_labels: [__meta_kubernetes_role, __meta_kubernetes_service_annotation_prometheus_io_scrape]
          action: keep
          regex: endpoint;true
        # Rewrite the Kubernetes service name into the Prometheus job label.
        - source_labels: [__meta_kubernetes_service_name]
          target_label: job
        # Attach the namespace as a label to the monitoring targets.
        - source_labels: [__meta_kubernetes_namespace]
          target_label: namespace
        # Attach all service labels to the monitoring targets.
        - action: labelmap
          regex: __meta_kubernetes_service_label_(.+)
